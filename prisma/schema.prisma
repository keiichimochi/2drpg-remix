// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
  output   = "../generated/prisma"
}

datasource db {
  provider = "sqlite"
  url      = env("DATABASE_URL")
}

model Project {
  id        String   @id @default(cuid())
  name      String
  settings  String?  // JSON string for ProjectSettings
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  maps      Map[]
  tilesets  Tileset[]
  sprites   Sprite[]
  locales   Locale[]
  flags     Flag[]
  aiJobs    AIGenerationJob[]
}

model Map {
  id        String @id @default(cuid())
  projectId String
  project   Project @relation(fields: [projectId], references: [id], onDelete: Cascade)
  name      String
  width     Int
  height    Int
  layers    String   // JSON string for MapLayer[]
  events    String   // JSON string for MapEvent[]
}

model Tileset {
  id          String @id @default(cuid())
  projectId   String
  project     Project @relation(fields: [projectId], references: [id], onDelete: Cascade)
  name        String
  imageUrl    String
  tileSize    Int    @default(16)
  columns     Int
  rows        Int
  stableIdMap String // JSON string for Record<string, number>
  hash        String
  metadata    String? // JSON string for TilesetMetadata
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt
}

model Sprite {
  id        String @id @default(cuid())
  projectId String
  project   Project @relation(fields: [projectId], references: [id], onDelete: Cascade)
  name      String
  imageUrl  String
  animations String // JSON string for SpriteAnimation[]
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

model AIGenerationJob {
  id          String   @id @default(cuid())
  projectId   String
  project     Project @relation(fields: [projectId], references: [id], onDelete: Cascade)
  status      String   // 'pending' | 'generating' | 'processing' | 'completed' | 'failed'
  request     String   // JSON string for AITileGenerationRequest
  result      String?  // JSON string for AITileGenerationResult
  error       String?
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt
}

model Locale {
  id        String @id @default(cuid())
  projectId String
  project   Project @relation(fields: [projectId], references: [id], onDelete: Cascade)
  lang      String
  entries   String // JSON string for Record<string, string>

  @@unique([projectId, lang])
}

model Flag {
  id        String @id @default(cuid())
  projectId String
  project   Project @relation(fields: [projectId], references: [id], onDelete: Cascade)
  key       String
  value     String // JSON string

  @@unique([projectId, key])
}
